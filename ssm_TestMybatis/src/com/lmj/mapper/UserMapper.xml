<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lmj.mapper.UserMapper">
	<!-- sql标签 – 可以提取重复sql语句片段 -->
	<sql id="myselect">
		select * from user	
	</sql>

	<!-- 根据id查询用户 -->
	<select id="selectUserById" parameterType="Integer" resultType="User">
		select * from user where u_id = #{id}
	</select>
	
	<!-- 根据名字模糊查询用户 -->
	<!-- #{} 占位符 尽量选用#{}来解决问题 '1' '王'-->
	<!-- ${} 字符串拼接 or 1=1  王 -->
	<!-- order by ${} -->
	<select id="selectUserByName" parameterType="String" resultType="com.lmj.bean.User">
		select * from user where u_username like "%"#{value}"%"
	</select>
	
	<!-- 添加用户 -->
	<select id="insertUser" parameterType="com.lmj.bean.User">
		insert into user values(null,#{u_username},#{u_password},#{u_sex},#{u_createTime},#{u_cid})
	</select>
	
	<!-- 修改用户 -->
	<select id="updateUser" parameterType="com.lmj.bean.User">
		update user set u_username = #{u_username} where u_id = #{u_id}
	</select>
	
	<!-- 根据id删除用户 -->
	<select id="deleteUserById" parameterType="Integer">
		delete from user where u_id = #{id}
	</select>
	
	<!-- 参数类型为包装类 -->
	<select id="selectUserVobyId" parameterType="UserVo" resultType="com.lmj.bean.User">
		select * from user where u_id = #{user.u_id}
	</select>
	
	<!-- 输出基本类型 -->
	<select id="selectUserCount" resultType="Integer">
		Select Count(*) from user
	</select>
	
	<!-- //查询所有用户包装类 
	public List<UserVo> selectAllUserVo(); -->
	<resultMap type="UserVo" id="uservolist">
		<id property="u_id" column="u_id" />
		<result property="u_username" column="u_username" />
		<result property="u_sex" column="u_sex" />
		<association property="country" javaType="Country">
			<id property="id" column="c_id" />
			<result property="c_countryname" column="c_countryname" />
		</association>
	</resultMap>
	<select id="selectAllUserVo" resultMap="uservolist">
		select 
		u.u_id,
		u.u_username,
		u.u_sex,
		c.c_id,
		c.c_countryname 
		FROM user u 
		left join country c 
		on u.u_cid=c.c_id
	</select>
	
	<!-- //多条件查询 通过用户对象中的条件查询用户列表
	public List<User> selectUserListByUser(User u); -->
	<select id="selectUserListByUser" parameterType="User" resultType="User">
	<!-- 查询用户性别 模糊查询用户名 查询用户cid 国籍ID -->
		select * 
		from user 
		<where>
		<!-- where标签可以去掉开头的AND -->
			<if test="u_sex!=null and u_sex!=''">
			and u_sex = #{u_sex} 
			</if>
			<if test="u_username!=null and u_username!=''">
			and u_username like "%"#{u_username}"%" 
			</if>
			<if test="u_cid!=null and u_cid!=''">
			and u_cid = #{u_cid}
			</if>
		</where> 
	</select>

	<select id="selectUserListByUserTrim" parameterType="User" resultType="User">
	<!-- 查询用户性别 模糊查询用户名 查询用户cid 国籍ID -->
		select * 
		from user 
		<!--prefix前缀,suffix后缀,prefixOverrides去掉前缀(默认),suffixOverrides去掉后缀  -->
		<trim prefix="where" suffixOverrides="And"> 
			<if test="u_sex!=null and u_sex!=''">
			u_sex = #{u_sex} and
			</if>
			<if test="u_username!=null and u_username!=''">
			u_username like "%"#{u_username}"%" and 
			</if>
			<if test="u_cid!=null and u_cid!=''">
			u_cid = #{u_cid} and 
			</if>
		</trim>
	</select>
	
	<!-- public void updateSetUser(User u); -->
	<update id="updateSetUser" parameterType="User">
	<!-- 用户名 用户密码 性别 用id来限制 -->
		update user
		<set>
		<!-- set标签可以去掉后面的, -->
			<if test="u_username !=null and u_username !=''">
			u_username = #{u_username},
			</if>
			<if test="u_password !=null and u_password !=''">
			u_password = #{u_password},
			</if>
			<if test="u_sex!=null and u_sex!=''">
			u_sex = #{u_sex} ,
			</if>
		</set>
		Where u_id = #{u_id}
	</update>
	
	<!-- 	//使用多个id获取用户列表
	public List<User> selectUserListByIds(); (1, 3, 5)-->
	<select id="selectUserListByIds" resultType="com.lmj.bean.User">
		select * 
		from user 
		where u_id 
		in
		<!-- (1,2,3) -->
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>
	
	<!-- 	//使用多个id获取用户列表
	public List<User> selectUserListByIds(); (1, 3, 5)-->
	<select id="selectUserListByList" resultType="com.lmj.bean.User">
		select * 
		from user 
		where u_id 
		in
		<!-- (1,2,3) -->
		<foreach collection="list" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>
	
	<!-- 	//使用多个id获取用户列表 by userVO
	public List<User> selectUserListByUserVo(UserVo vo); -->
	<select id="selectUserListByUserVo" parameterType="UserVo" resultType="com.lmj.bean.User">
		<include refid="myselect" />
		where u_id 
		in
		<!-- (1,2,3) -->
		<foreach collection="idList" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>
	
</mapper>