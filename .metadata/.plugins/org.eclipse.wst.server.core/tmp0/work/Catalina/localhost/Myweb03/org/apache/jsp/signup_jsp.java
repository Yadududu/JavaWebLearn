/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.38
 * Generated at: 2019-06-22 18:19:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"utf-8\">\n");
      out.write("\t\t<title>注册</title>\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<form action=\"signup_do\" method=\"post\">\r\n");
      out.write("\t\t\t\t<tr><td>用户名:</td><td><input type=\"text\" name = \"username\"><div id=\"msg\"></div></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td>密码:</td><td><input type=\"text\" name = \"password\"><div id=\"msgPassword\"></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td>确认密码:</td><td><input type=\"text\" name = \"repassword\"><div id=\"msgRepassword\"></div></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td>性别:</td><td><input type=\"radio\" name = \"sex\" value = \"man\" checked />男<input type=\"radio\" name = \"sex\" value = \"woman\" />女</td></tr>\r\n");
      out.write("\t\t\t\t<tr><td>联系方式:</td><td><input type=\"text\" name = \"phoneNumber\"/><div id=\"msgPhoneNumber\"></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td><input type=\"submit\" value=\"确认\" /></td><td><input type=\"reset\" value=\"清空\" /></td></tr>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</table>\n");
      out.write("\t</body>\n");
      out.write("</html>\n");
      out.write("<script type=\"text/javascript\" src=\"Js/jquery-3.3.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t// document.getElementsByName(\"username\")[0].addEventListener(\"blur\",verifyUsername);\n");
      out.write("\t// function verifyUsername(){\n");
      out.write("\t// \tvar xmlhttp=new XMLHttpRequest();\n");
      out.write("\t// \txmlhttp.open(\"GET\",\"test1.txt\",true);\n");
      out.write("\t// \txmlhttp.send();\n");
      out.write("\t// \txmlhttp.onreadystatechange=function(){\n");
      out.write("\t// \t\tif (xmlhttp.readyState==4 && xmlhttp.status==200){\n");
      out.write("\t// \t\t\tdocument.getElementById(\"msg\").innerHTML=encodeURI(xmlhttp.responseText);\n");
      out.write("\t// \t\t}\n");
      out.write("\t// \t}\n");
      out.write("\t// }\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\"input[name='username']\").blur(verifyUsername);\n");
      out.write("\t});\n");
      out.write("\tfunction verifyUsername(){\n");
      out.write("\t\t$.ajax({ \n");
      out.write("\t\t\turl: \"VerifyUsername\", \n");
      out.write("\t\t\ttype: \"post\",\n");
      out.write("\t\t\tdata:{\n");
      out.write("\t\t\t\tusername:$(\"input[name='username']\").val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tdataType:\"json\",\n");
      out.write("\t\t\tsuccess: function(msg){\n");
      out.write("\t\t\t\t//alert(msg.isSuccess);\n");
      out.write("\t\t\t\tif(msg.isSuccess){\n");
      out.write("\t\t\t\t\t$(\"#msg\").html(\"<font color='green'>用户名可以使用!</font>\");\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#msg\").html(\"<font color='red'>用户名重复!</font>\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\"input[name='password']\").blur(verifyPassword);\n");
      out.write("\t});\n");
      out.write("\tfunction verifyPassword(){\n");
      out.write("\t\t$.ajax({ \n");
      out.write("\t\t\turl: \"VerifyPassword\", \n");
      out.write("\t\t\ttype: \"post\",\n");
      out.write("\t\t\tdata:{\n");
      out.write("\t\t\t\tpassword:$(\"input[name='password']\").val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tdataType:\"json\",\n");
      out.write("\t\t\tsuccess: function(msgPassword){\n");
      out.write("\t\t\t//\talert(msg.isSuccess);\n");
      out.write("\t\t\t\tif(!msgPassword.isSuccess){\n");
      out.write("\t\t\t\t\t$(\"#msgPassword\").html(\"<font color='red'>密码必须是3-6位数</font>\");\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#msgPassword\").html(\"\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\"input[name='repassword']\").blur(verifyRepassword);\n");
      out.write("\t});\n");
      out.write("\tfunction verifyRepassword(){\n");
      out.write("\t\t$.ajax({ \n");
      out.write("\t\t\turl: \"VerifyRepassword\", \n");
      out.write("\t\t\ttype: \"post\",\n");
      out.write("\t\t\tdata:{\n");
      out.write("\t\t\t\tpassword:$(\"input[name='password']\").val(),\n");
      out.write("\t\t\t\trepassword:$(\"input[name='repassword']\").val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tdataType:\"json\",\n");
      out.write("\t\t\tsuccess: function(msgRepassword){\n");
      out.write("\t\t\t//\talert(msg.isSuccess);\n");
      out.write("\t\t\t\tif(!msgRepassword.isSuccess){\n");
      out.write("\t\t\t\t\t$(\"#msgRepassword\").html(\"<font color='red'>确认密码跟密码不一致!</font>\");\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#msgRepassword\").html(\"\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\"input[name='phoneNumber']\").blur(verifyPhoneNumber);\n");
      out.write("\t});\n");
      out.write("\tfunction verifyPhoneNumber(){\n");
      out.write("\t\t$.ajax({ \n");
      out.write("\t\t\turl: \"VerifyPhoneNumber\", \n");
      out.write("\t\t\ttype: \"post\",\n");
      out.write("\t\t\tdata:{\n");
      out.write("\t\t\t\tphoneNumber:$(\"input[name='phoneNumber']\").val()\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tdataType:\"json\",\n");
      out.write("\t\t\tsuccess: function(msgPhoneNumber){\n");
      out.write("\t\t\t//\talert(msg.isSuccess);\n");
      out.write("\t\t\t\tif(msgPhoneNumber.isSuccess){\n");
      out.write("\t\t\t\t\t$(\"#msgPhoneNumber\").html(\"<font color='red'>电话号码不能为空!</font>\");\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#msgPhoneNumber\").html(\"\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
